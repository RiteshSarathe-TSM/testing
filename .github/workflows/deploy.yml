name: CI/CD to GKE

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Show directory structure (debug)
      run: ls -R

    # Authenticate with GCP
    - name: Authenticate with GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: astute-tractor-457019-j3

    # -------------------------
    #  SNYK & SONARQUBE
    # -------------------------

    # Install Python and dependencies
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Or the version you're using

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Snyk CLI
      run: npm install -g snyk

    - name: Authenticate with Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}

    - name: Run Snyk Security Scan
      run: snyk test || true  # Prevent failure on minor issues

    - name: Install SonarQube Scanner
      run: |
        SONAR_VERSION="7.0.0.4796"
        curl -fSL -o sonar-scanner.zip "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_VERSION-linux-x64.zip"
        unzip sonar-scanner.zip
        sudo mv sonar-scanner-* /opt/sonar-scanner
        echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

    - name: Run SonarQube Analysis
      run: |
        # Detect first-level directory with code if 'src' doesn't exist
        if [ ! -d "src" ]; then
          echo "âš 'src' directory not found. Trying to auto-detect source folder..."
          SOURCE_FOLDER=$(find . -type d -maxdepth 1 -mindepth 1 ! -name ".*" | head -n 1 | cut -c 3-)
        else
          SOURCE_FOLDER="src"
        fi

        echo " Using '$SOURCE_FOLDER' as sonar.sources"

        /opt/sonar-scanner/bin/sonar-scanner \
          -Dsonar.projectKey=fe-odr-soft-release \
          -Dsonar.sources=$SOURCE_FOLDER \
          -Dsonar.host.url=http://34.31.16.126:9000 \
          -Dsonar.token=${{ secrets.SONARQUBE_TOKEN }}

    # -------------------------
    #  BUILD AND DEPLOY
    # -------------------------

    - name: Configure Docker
      run: gcloud auth configure-docker southamerica-east1-docker.pkg.dev

    - name: Build and push Docker image
      run: |
        docker build -t southamerica-east1-docker.pkg.dev/hallowed-object-458420-q9/fast-api/service1:latest .
        docker push southamerica-east1-docker.pkg.dev/hallowed-object-458420-q9/fast-api/service1:latest

    - name: Install gke-gcloud-auth-plugin
      run: gcloud components install gke-gcloud-auth-plugin --quiet

    - name: Get GKE credentials
      run: gcloud container clusters get-credentials autopilot-cluster-1 --zone us-central1

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yml
